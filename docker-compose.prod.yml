version: '2'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT_PLATFORM_VERSION}
    user: ${HOST_USER}
    networks:
      - kibon_exchange_backbone
    ports:
      - "2181:2181"
    volumes:
      - ${CONF_DIR}/zookeeper/data:/var/lib/zookeeper/data
      - ${CONF_DIR}/zookeeper/log:/var/lib/zookeeper/log
      - ${CONF_DIR}/zookeeper/jvmlogs:/var/log/kafka
    environment:
      TZ: "Europe/Zurich"
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:${CONFLUENT_PLATFORM_VERSION}
    user: ${HOST_USER}
    networks:
      - kibon_exchange_backbone
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    volumes:
      - ${CONF_DIR}/kafka/data:/var/lib/kafka/data
      - ${CONF_DIR}/kafka/jvmlogs:/var/log/kafka
    environment:
      TZ: "Europe/Zurich"
      KAFKA_LOG_RETENTION_HOURS: -1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://${KAFKA_ADDR}:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:${CONFLUENT_PLATFORM_VERSION}
    user: ${HOST_USER}
    hostname: schema-registry
    networks:
      - kibon_exchange_backbone
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      TZ: "Europe/Zurich"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: 'full_transitive'
      SCHEMA_REGISTRY_DEBUG: 'true'

  keycloak:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
    networks:
      - kibon_exchange_backbone
    volumes:
      - ${CONF_DIR}/keycloak/kibon_realm.json:/tmp/kibon_realm.json:ro
      - ${CONF_DIR}/keycloak/set-secrets.sh:/opt/jboss/startup-scripts/set-secrets.sh:ro
    command: "-Dkeycloak.profile.feature.upload_scripts=enabled"
    environment:
      TZ: "Europe/Zurich"
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      DB_VENDOR: "postgres"
      DB_ADDR: ${DB_ADDR}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${PG_KEYCLOAK_DB}
      DB_USER: ${PG_KEYCLOAK_USER}
      DB_PASSWORD: ${PG_KEYCLOAK_PW}
      PROXY_ADDRESS_FORWARDING: "true"
      KEYCLOAK_ALWAYS_HTTPS: ${KEYCLOAK_ALWAYS_HTTPS}
      KEYCLOAK_FRONTEND_URL: ${KEYCLOAK_FRONTEND_URL}
      KEYCLOAK_IMPORT: "/opt/jboss/kibon_realm.json"
      KITADMIN_SECRET: ${KITADMIN_SECRET}
      KIBON_EXCHANGE_SERVICE_SECRET: ${KIBON_EXCHANGE_SERVICE_SECRET}

  service:
    image: docker.dvbern.ch/kibon/exchange-service:${VERSION}
    networks:
      - kibon_exchange_backbone
    depends_on:
      - kafka
      - keycloak
    volumes:
      - ${CONF_DIR}/service/certs/key.pem:/key.pem:ro
      - ${CONF_DIR}/service/certs/cert.pem:/cert.pem:ro
    environment:
      TZ: "Europe/Zurich"
      GROUP_ID: ${GROUP_ID}
      KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_ADDR}:9092"
      QUARKUS_DATASOURCE_JDBC_URL: ${QUARKUS_DATASOURCE_JDBC_URL}
      QUARKUS_DATASOURCE_USERNAME: ${QUARKUS_DATASOURCE_USERNAME}
      QUARKUS_DATASOURCE_PASSWORD: ${QUARKUS_DATASOURCE_PASSWORD}
      QUARKUS_OIDC_AUTH_SERVER_URL: ${QUARKUS_OIDC_AUTH_SERVER_URL}
      # we have to wait until keycloak is up and running
      QUARKUS_OIDC_CONNECTION_DELAY: "30s"
      QUARKUS_OIDC_CREDENTIALS_SECRET: ${KIBON_EXCHANGE_SERVICE_SECRET}
      QUARKUS_LOG_SENTRY: ${QUARKUS_LOG_SENTRY}
      QUARKUS_LOG_SENTRY_DSN: ${QUARKUS_LOG_SENTRY_DSN}
      QUARKUS_LOG_SENTRY_ENVIRONMENT: ${QUARKUS_LOG_SENTRY_ENVIRONMENT}

  nginx:
    image: docker.dvbern.ch/kibon/exchange-nginx:${VERSION}
    networks:
      - kibon_exchange_backbone
    depends_on:
      - service
    ports:
      - "443:443"
    volumes:
      - ${CONF_DIR}/nginx/certs/key.pem:/etc/nginx/certs/key.pem:ro
      - ${CONF_DIR}/nginx/certs/cert.pem:/etc/nginx/certs/cert.pem:ro

networks:
  kibon_exchange_backbone:
