# Configuration file
# key = value
quarkus.keycloak.realm=kibon
quarkus.keycloak.auth-server-url=http://localhost:8180/auth
quarkus.keycloak.resource=kibon-exchange-service
quarkus.keycloak.bearer-only=true
quarkus.keycloak.credentials.secret=4cf4f780-3856-46ee-850d-f07789675a33
#quarkus.log.category."org.keycloak".level=TRACE

quarkus.datasource.url=jdbc:postgresql://localhost:15432/kibon-exchange
quarkus.datasource.driver=org.postgresql.Driver
quarkus.datasource.username=kibonExchange
quarkus.datasource.password=kibonExchange

# in dev mode, apply entity changes directly. We don't care about existing data
# unfortunately, this does not reapply FlyWay migrations
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script=import-dev.sql

# use this to incrementally work in your app while keeping data
# useful for rapid dev-check cycles with Quarkus dev mode
%dev-with-data.quarkus.hibernate-orm.database.generation=update
%dev-with-data.quarkus.hibernate-orm.sql-load-script=

# TEST
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.sql-load-script=import-dev.sql

# make sure not to modify the schame in prod mode: if needed, integrate FlyWay
%prod.quarkus.hibernate-orm.database.generation=none
%prod.quarkus.hibernate-orm.sql-load-script=no-file

quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.statistics=false

quarkus.http.port=8380
quarkus.http.ssl-port=8443
# To get HTTPS working, either a key-store-file must be specified, or a certificate provided. See the following options:
# The file path to a server certificate or certificate chain in PEM format.
%prod.quarkus.http.ssl.certificate.file=/cert.pem
# The file path to the corresponding certificate private key file in PEM format.
%prod.quarkus.http.ssl.certificate.key-file=/key.pem
# An optional key store which holds the certificate information instead of specifying separate files.
#quarkus.http.ssl.certificate.key-store-file
# An optional parameter to specify type of the key store file. If not given, the type is automatically detected based on the file name.
#quarkus.http.ssl.certificate.key-store-file-type

# Kafka URL
kafka.bootstrap.servers=localhost:9092

# Configure the Kafka source (we read from it)
mp.messaging.incoming.InstitutionClientEvents.connector=smallrye-kafka
mp.messaging.incoming.InstitutionClientEvents.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer

mp.messaging.incoming.VerfuegungEvents.connector=smallrye-kafka
mp.messaging.incoming.VerfuegungEvents.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer

mp.messaging.incoming.InstitutionEvents.connector=smallrye-kafka
mp.messaging.incoming.InstitutionEvents.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer

# Flyway configuration
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=0.0.0
quarkus.flyway.baseline-description=Initial version
